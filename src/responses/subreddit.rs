use serde::Deserialize;
#[cfg(feature = "serialize")]
use serde::Serialize;

#[derive(Deserialize)]
#[cfg_attr(feature = "serialize", derive(Serialize))]
#[cfg_attr(feature = "debug_attr", derive(Debug))]
#[cfg_attr(feature = "deny_unknown_fields", serde(deny_unknown_fields))]
pub struct Subreddit {
    pub allow_galleries: bool,
    pub active_user_count: Option<serde_json::Value>,
    pub accounts_active: Option<serde_json::Value>,
    pub advertiser_category: String,
    pub allow_predictions: bool,
    pub all_original_content: bool,
    pub allow_videogifs: bool,
    pub allow_polls: bool,
    pub allow_videos: bool,
    pub accounts_active_is_fuzzed: bool,
    pub allow_chat_post_creation: Option<bool>,
    pub allow_discovery: bool,
    pub allow_images: bool,
    pub allow_predictions_tournament: Option<bool>,
    pub banner_background_image: String,
    pub banner_img: String,
    pub banner_background_color: String,
    pub banner_size: Option<serde_json::Value>,
    pub comment_score_hide_mins: u32,
    pub community_icon: String,
    pub can_assign_user_flair: bool,
    pub created: f64,
    pub collapse_deleted_comments: bool,
    pub can_assign_link_flair: bool,
    pub created_utc: f64,
    pub display_name: String,
    pub display_name_prefixed: String,
    pub description_html: Option<String>,
    pub disable_contributor_requests: bool,
    pub description: String,
    pub emojis_enabled: bool,
    pub emojis_custom_size: Option<serde_json::Value>,
    pub free_form_reports: bool,
    pub header_img: Option<String>,
    pub hide_ads: bool,
    pub header_title: String,
    pub header_size: Option<serde_json::Value>,
    pub has_menu_widget: bool,
    pub icon_size: Option<[u32; 2]>,
    pub icon_img: String,
    pub is_enrolled_in_new_modmail: Option<serde_json::Value>,
    pub is_crosspostable_subreddit: Option<bool>,
    pub is_default_banner: Option<bool>,
    pub is_default_icon: Option<bool>,
    pub id: String,
    pub is_chat_post_feature_enabled: Option<bool>,
    pub key_color: String,
    pub link_flair_position: String,
    pub link_flair_enabled: bool,
    pub lang: String,
    pub mobile_banner_image: String,
    pub name: String,
    pub notification_level: Option<String>,
    pub original_content_tag_enabled: bool,
    pub over18: bool,
    pub primary_color: String,
    pub public_traffic: bool,
    pub prediction_leaderboard_entry_type: String,
    pub public_description: String,
    pub public_description_html: Option<String>,
    pub quarantine: bool,
    pub restrict_posting: bool,
    pub restrict_commenting: bool,
    pub submit_text_html: Option<String>,
    pub subscribers: u32,
    pub submit_text: String,
    pub spoilers_enabled: bool,
    pub show_media_preview: bool,
    pub submission_type: String,
    pub submit_text_label: String,
    pub subreddit_type: String,
    pub suggested_comment_sort: Option<serde_json::Value>,
    pub show_media: bool,
    pub submit_link_label: String,
    pub title: String,
    pub user_flair_background_color: Option<serde_json::Value>,
    pub user_is_banned: bool,
    pub user_is_muted: bool,
    pub user_can_flair_in_sr: Option<serde_json::Value>,
    pub user_flair_richtext: Vec<String>,
    pub user_has_favorited: bool,
    pub user_flair_template_id: Option<serde_json::Value>,
    pub user_flair_position: String,
    pub user_is_subscriber: bool,
    pub user_flair_type: String,
    pub user_sr_flair_enabled: Option<serde_json::Value>,
    pub user_flair_enabled_in_sr: bool,
    pub user_sr_theme_enabled: bool,
    pub user_flair_text: Option<serde_json::Value>,
    pub user_is_moderator: bool,
    pub user_flair_text_color: Option<serde_json::Value>,
    pub user_flair_css_class: Option<serde_json::Value>,
    pub url: String,
    pub user_is_contributor: bool,
    pub videostream_links_count: Option<u32>,
    pub wiki_enabled: Option<bool>,
    pub wls: Option<i32>,
    pub whitelist_status: Option<String>,
}
